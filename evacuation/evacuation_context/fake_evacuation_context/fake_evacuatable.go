// Code generated by counterfeiter. DO NOT EDIT.
package fake_evacuation_context

import (
	"sync"

	"code.cloudfoundry.org/rep/evacuation/evacuation_context"
)

type FakeEvacuatable struct {
	EvacuateStub        func()
	evacuateMutex       sync.RWMutex
	evacuateArgsForCall []struct {
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeEvacuatable) Evacuate() {
	fake.evacuateMutex.Lock()
	fake.evacuateArgsForCall = append(fake.evacuateArgsForCall, struct {
	}{})
	stub := fake.EvacuateStub
	fake.recordInvocation("Evacuate", []interface{}{})
	fake.evacuateMutex.Unlock()
	if stub != nil {
		fake.EvacuateStub()
	}
}

func (fake *FakeEvacuatable) EvacuateCallCount() int {
	fake.evacuateMutex.RLock()
	defer fake.evacuateMutex.RUnlock()
	return len(fake.evacuateArgsForCall)
}

func (fake *FakeEvacuatable) EvacuateCalls(stub func()) {
	fake.evacuateMutex.Lock()
	defer fake.evacuateMutex.Unlock()
	fake.EvacuateStub = stub
}

func (fake *FakeEvacuatable) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.evacuateMutex.RLock()
	defer fake.evacuateMutex.RUnlock()
	copiedInvocations := map[string][][]interface{}{}
	for key, value := range fake.invocations {
		copiedInvocations[key] = value
	}
	return copiedInvocations
}

func (fake *FakeEvacuatable) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ evacuation_context.Evacuatable = new(FakeEvacuatable)
